server.port=${USER_MANAGEMENT_PORT:7002}
spring.application.name=TEST-MANAGEMENT
server.servlet.context-path=/test
spring.profiles.active=${ACTIVE_PROFILE:dev}

#Datasource
spring.datasource.url=${HIS_DB_URL:jdbc:mysql://localhost:3306/test_management?createDatabaseIfNotExist=true&autoReconnect=true&useUnicode=yes&characterEncoding=UTF-8&allowLoadLocalInfile=true}
spring.datasource.username=${HIS_DB_USERNAME:root}
spring.datasource.password=${HIS_DB_PASSWORD:admin123}

######## USER DATASOURCE CONFIGURATION #############
spring.datasource.user.url=${HIS_DB_URL:jdbc:mysql://localhost:3306/user_management?createDatabaseIfNotExist=true&autoReconnect=true&useUnicode=yes&characterEncoding=UTF-8&allowLoadLocalInfile=true}
spring.datasource.user.username=${HIS_DB_USERNAME:root}
spring.datasource.user.password=${HIS_DB_PASSWORD:admin123}
#
##flyway
#spring.flyway.schemas=${DB_SCHEMA:test_management}
#Config server
spring.config.import=optional:configserver:${CONFIG_SERVER_BASEURL:http://localhost:7010/cs/}

#AES
aes.encryption.key=${AES_ENCRYPTION_KEY:projectsangevini}
aes.encryption.iVector=${AES_ENCRYPTION_iVECTOR:projectsangevini}

#Hikari Specific
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE:2}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:60000}

#graceful shutdown
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

#missing Keys
host=localhost
port=7002
timeout=30
#kafka configurations
spring.kafka.properties.sasl.mechanism=PLAIN 
spring.kafka.properties.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.value.deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
spring.kafka.consumer.properties.key.deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.consumer.group-id=group-id
spring.kafka.properties.session.timeout.ms=45000 
spring.main.allow-bean-definition-overriding=true
spring.kafka.properties.request.timeout.ms=45000
spring.kafka.properties.retry.backoff.ms=45000
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.streams.application-id=rs-common
#kafka topics
app.kafka.consumer.rs_audit_trail_topic=auditlog
app.kafka.consumer.number_format=numberformat
#External Endpoints
application.settings.baseurl=http://localhost:9101

#JWT signature key
auth.secret.key=${AUTH_TOKEN_SECRET:41fa26884c874db1d59070fb773ef4fcab724bfd6443ec7cf2d2828f460bbbfe}
auth.jwt.issuer=${ISSUER:Issuer}
access.token.expiration.time=${ACCESS_TOKEN_EXPIRY:30}
refresh.token.expiration.time=${REFRESH_TOKEN_EXPIRY:1440}