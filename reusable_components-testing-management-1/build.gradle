plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id "fr.brouillard.oss.gradle.jgitver" version "0.10.0-rc03"
    id 'eu.davidea.grabver' version '1.0.1'
    id 'pl.allegro.tech.build.axion-release' version '1.14.0'
}

//project.version = scmVersion.version
//apply plugin: 'eu.davidea.grabver'

springBoot {
    buildInfo {
        properties {
            artifact = Globals.buildArtifactId
            group = Globals.buildGroup
            name = Globals.buildName
            version = Globals.buildVersion
        }
    }
    mainClass = Globals.mainClassName
}

class Globals {
    static String buildVersion = "1.0-SNAPSHOT"
    static String buildGroup = "com.rs"
    static String buildArtifactId = "rs-test-management"
    static String buildName = "rs-test-management"
    static String mainClassName = "com.rs.um.TestApplication"
}

tasks.named("bootJar") {
    mainClass = Globals.mainClassName
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


repositories {
    mavenCentral()

}

ext {
    set('springCloudVersion', "2021.0.3")
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'

    implementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation("com.google.code.gson:gson:2.9.1")
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation files('/Users/savithapai/Desktop/reusable_components/build/libs/rs-user-management-0.1.0-SNAPSHOT.jar')

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    //implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}


jib {
    from.image = 'eclipse-temurin:17-jre-alpine'
}

jgitver {
    autoIncrementPatch true
    policy {
        pattern = '(development)'
        transformations = ['IGNORE']
    }
}

task getApplicationName {
    doFirst {
        println 'ApplicationName:' + rootProject.name
    }
}
